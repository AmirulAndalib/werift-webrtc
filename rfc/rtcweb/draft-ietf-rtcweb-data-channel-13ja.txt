ネットワークワーキンググループR.ジェサップ
インターネットドラフトMozilla
対象ステータス：Standards Track S. Loreto
有効期限：2015年7月8日エリクソン
                                                               M. Tuexen
                                        ムンスター大学 Appl. 科学
                                                         2015年1月4日
        
WebRTCデータチャネルdraft-ietf-rtcweb-data-channel-13.txt

概要

WebRTCフレームワークは、2つのピアのWebブラウザー間でオーディオ、ビデオ、およびデータを使用した直接対話型のリッチ通信のプロトコルサポートを指定します. このドキュメントでは、WebRTCフレームワークの非メディアデータ転送の側面について説明します. ストリーム制御伝送プロトコル（SCTP）がWebRTCコンテキストで汎用トランスポートサービスとして使用され、WEBブラウザーがピアツーピアで汎用データを交換できるようにするアーキテクチャの概要を提供します. 

このメモのステータス

このインターネットドラフトは、BCP 78およびBCP 79の規定に完全に準拠して提出されます. 

Internet-Draftsは、Internet Engineering Task Force（IETF）の作業文書です. 他のグループも作業文書をインターネットドラフトとして配布する場合があることに注意してください. 現在のインターネットドラフトのリストは、http：//datatracker.ietf.org/drafts/current/にあります. 

Internet-Draftは、最長6か月間有効な草案文書であり、いつでも他の文書によって更新、置き換え、または廃止される可能性があります. インターネットドラフトを参考資料として使用したり、「進行中の作業」以外の方法で引用することは不適切です. 

このインターネットドラフトは2015年7月8日に期限が切れます. 

著作権表示

Copyright（c）2015 IETF Trustおよびドキュメントの作成者として識別された人物. 全著作権所有. 

   このドキュメントは、BCP 78およびIETFトラストの法的条件の対象です. 
   IETF文書に関する規定
   （http://trustee.ietf.org/license-info）の日付で有効
        
このドキュメントの発行. これらのドキュメントは、このドキュメントに関するあなたの権利と制限について説明しているため、注意深く確認してください. このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます. 

目次

   1.はじめに. . . . . . . . . . . . . . . . . . . . . . . . 2
   2.規約. . . . . . . . . . . . . . . . . . . . . . . . . ３
   3.使用例. . . . . . . . . . . . . . . . . . . . . . . . . . ３
     3.1. 信頼性の低いデータチャネルの使用例 . . . . . . . . 4
     3.2. 信頼性の高いデータチャネルの使用例 . . . . . . . . . 4
   4.要件. . . . . . . . . . . . . . . . . . . . . . . . 4
   5. SCTP over DTLS over UDPに関する考慮事項. . . . . . . . . . . 6
   6.データチャネルに対するSCTPの使用. . . . . . . . . . . . . 8
     6.1. SCTPプロトコルの考察. . . . . . . . . . . . . . 8
     6.2. SCTPアソシエーション管理. . . . . . . . . . . . . . . 9
     6.3. SCTPストリーム. . . . . . . . . . . . . . . . . . . . . . 9
     6.4. データチャネル定義. . . . . . . . . . . . . . . . . 10
     6.5. データチャネルを開く. . . . . . . . . . . . . . . . . 10
     6.6. データチャネルでのユーザーデータの転送 . . . . . . . 11
     6.7. データチャネルを閉じる. . . . . . . . . . . . . . . . . 12
   7.セキュリティに関する考慮事項. . . . . . . . . . . . . . . . . . . 13
   8. IANAに関する考慮事項. . . . . . . . . . . . . . . . . . . . . 13
   9.謝辞. . . . . . . . . . . . . . . . . . . . . . . 14
   10.参考文献. . . . . . . . . . . . . . . . . . . . . . . . . 14
     10.1 規範的な参照. . . . . . . . . . . . . . . . . . 14
     10.2 有益な参照. . . . . . . . . . . . . . . . . 15
   著者のアドレス. . . . . . . . . . . . . . . . . . . . . . . 16
        
1.はじめに
WebRTCフレームワークでは、当事者間の通信は、メディア（オーディオやビデオなど）と非メディアデータで構成されます. メディアはSRTPを使用して送信され、ここではさらに指定されません. 非メディアデータは、DTLSにカプセル化されたSCTP [RFC4960]を使用して処理されます. DTLS 1.0は[RFC4347]で定義されており、現在の最新バージョンであるDTLS 1.2は[RFC6347]で定義されています. 

                               +----------+
                               |   SCTP   |
                               +----------+
                               |   DTLS   |
                               +----------+
                               | ICE/UDP  |
                               +----------+

                       Figure 1: Basic stack diagram

DTPを介したSCTP（[ID.ietf-tsvwg-sctp-dtls-encaps]を参照）をICE / UDP（[RFC5245]を参照）でカプセル化すると、機密性、ソース認証、および整合性保護転送とともにNATトラバーサルソリューションが提供されます. このデータトランスポートサービスはSRTPメディアトランスポートと並行して動作し、それらすべては最終的に単一のUDPポート番号を共有できます. 

[RFC4960]で指定されているSCTPは、[RFC3758]で定義されている部分的な信頼性の拡張と[ID.ietf-tsvwg-sctp-prpolicies]で定義されている追加のポリシーにより、複数のストリームに信頼性のある、部分的に信頼性の高い配信モードをネイティブで提供しますユーザーメッセージ. [RFC6525]で定義されている再構成拡張を使用すると、SCTPアソシエーションのライフタイム中にストリーム数を増やし、個々のSCTPストリームをリセットできます. [ID.ietf-tsvwg-sctp-ndata]を使用すると、大きなメッセージをインターリーブして独占を回避し、SCTPストリームの優先順位付けのサポートを追加できます. 

このドキュメントの残りの部分は次のように構成されています. セクション3とセクション4は、信頼性と信頼性の両方のピアツーピアデータチャネルの使用例と要件を提供します. セクション5では、UDPを介したDTLSを介したSCTPについて説明します. セクション6では、Webブラウザー間で非メディアデータを転送するためにWebRTCプロトコルフレームワークがSCTPをどのように使用するかについての仕様を提供します. 

2.規約
このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 [RFC2119]で説明されているように解釈されます. 

3.ユースケース
このセクションでは、データチャネルに固有の使用例を定義します. このセクションは情報提供のみを目的としています. 

3.1. 信頼性の低いデータチャネルの使用例
UC 1：位置とオブジェクトの状態情報が1つ以上の信頼できないデータチャネルを介して送信されるリアルタイムゲーム. SRTPメディアチャネルがない場合や、すべてのSRTPメディアチャネルが非アクティブである場合があり、信頼できるデータチャネルが使用されている場合もあります. 

UC 2：ミュート状態など、ビデオチャットまたは会議での状態更新の理由に関する重要ではない情報をユーザーに提供する. 

3.2. 信頼性の高いデータチャネルの使用例
UC 3：制御情報などの重要な状態情報を転送する必要があるリアルタイムゲーム. そのようなゲームにはSRTPメディアチャネルがない場合や、特定の時間に非アクティブになる場合や、ゲーム内のアクションのためにのみ追加される場合があります. 

UC 4：チャットする人々の間の非リアルタイムのファイル転送. これには、画像のフォルダやファイルのディレクトリを共有する場合など、順次または並列に転送する多数のファイルが含まれる場合があることに注意してください. 

UC 5：会議中の個人または複数の人との音声またはビデオ通話中のリアルタイムのテキストチャット. 

UC 6：PeerConnectionの構成の再ネゴシエーション. 

UC 7：プロキシブラウジング. ブラウザはPeerConnectionのデータチャネルを使用して、HTTP / HTTPSリクエストとデータを送受信します. たとえば、ローカルのインターネットフィルタリングやモニタリングを回避します. 

4.要件
このセクションでは、2つのブラウザ間のP2Pデータチャネルの要件を示します. このセクションは情報提供のみを目的としています. 

必須 1：複数の同時データチャネルをサポートする必要があります. 同じPeerConnectionのデータチャネルと並行して0以上のSRTPメディアストリームが存在する可能性があり、これらのSRTPメディアストリームの数と状態（アクティブ/非アクティブ）はいつでも変化する可能性があることに注意してください. 

必須 2：信頼できるデータチャネルと信頼できないデータチャネルの両方をサポートする必要があります. 

必須 3：PeerConnectionのデータチャネルは輻輳制御する必要があります. 個別に、クラスとして、またはPeerConnectionのSRTPメディアストリームと組み合わせて、データチャネルがこれらのSRTPメディアストリームの輻輳問題を引き起こさないようにし、WebRTC PeerConnectionが並列実行時に過度の問題を引き起こさないようにします.  TCP接続で. 

必須 4：アプリケーションは、各データチャネルの相対的な優先度、およびSRTPメディアストリームに対する相対的な優先度に関するガイダンスを提供できる必要があります. これは、輻輳制御アルゴリズムと相互作用します. 

必須 5：データチャネルを保護する必要があります. 機密性、完全性、ソース認証を可能にします. 詳細については、[ID.ietf-rtcweb-security]および[ID.ietf-rtcweb-security-arch]を参照してください. 

必須 6：データチャネルは、メッセージの断片化サポートを提供する必要があります. これにより、JavaScriptアプリケーションが送信するメッセージのサイズに関係なく、IP層の断片化を回避できます. また、大規模なデータチャネル転送が他のデータチャネルのトラフィックを過度に遅延させないようにする必要もあります. 

必須 7：データチャネルトランスポートプロトコルは、プロトコルフィールド内のローカルIPアドレスをエンコードしてはなりません. これを行うと、潜在的にプライベートな情報が明らかになり、アドレスに依存している場合は失敗につながります. 

必須 8：データチャネルトランスポートプロトコルは、画像ファイル転送などのために、アプリケーション層で無制限の長さの「メッセージ」（つまり、仮想ソケットストリーム）をサポートする必要があります. 実装により、適切なメッセージサイズの制限が適用される場合があります. 

必須 9：データチャネルトランスポートプロトコルは、IPフラグメンテーションを回避する必要があります. これはPMTU（パスMTU）ディスカバリーをサポートする必要があり、特にPMTUディスカバリーの場合、生成またはパスバックされるICMPまたはICMPv6に依存してはなりません. 

必須 10：ユーザーアプリケーション空間にプロトコルスタックを実装できる必要があります. 

5. SCTP over DTLS over UDPに関する考慮事項
WebRTCコンテキストにおけるSCTPの重要な機能は次のとおりです. 

o TCPフレンドリな輻輳制御の使用. 

o輻輳制御は、SRTPメディアストリーム輻輳制御と統合するために変更可能です. 

o複数の単方向ストリームのサポート. それぞれが順序付けられたメッセージ配信の独自の概念を提供します. 

o順序付けられた、および順序が狂ったメッセージ配信のサポート. 

o断片化と再構成を提供することにより、任意の大きなユーザーメッセージをサポートします. 

o PMTU-discoveryのサポート. 

o信頼できる、または部分的に信頼できるメッセージ転送のサポート. 

WebRTCデータチャネルメカニズムは、SCTPマルチホーミングをサポートしていません. SCTLSレイヤーは、DTLSレイヤー（接続指向の信頼性の低いデータグラムサービス）が公開する抽象概念であるため、シングルホームのホストで実行されているかのように機能します. 

[ID.ietf-tsvwg-sctp-dtls-encaps]で定義されたDTPを介したSCTPのカプセル化は、機密性、ソース認証、および完全性保護された転送を提供します. DTLS over UDPをICEと組み合わせて使用​​すると、IPv4およびIPv6ベースのネットワークでミドルボックストラバーサルが可能になります. [RFC4960]で指定されているSCTPは、[RFC3758]で定義されている拡張機能と組み合わせて使用​​する必要があり、ブラウザ間で非メディアデータを転送するために次の機能を提供します. 

o複数の単方向ストリームのサポート. 

oユーザーメッセージの順序付きおよび順序なしの配信. 

oユーザーメッセージの信頼性の高い、部分的に信頼性の高いトランスポート. 

各SCTPユーザーメッセージには、送信側の上位層によってSCTPに渡され、受信側の上位層に提供されるペイロードプロトコル識別子（PPID）が含まれています. PPIDを使用して、単一のSCTPアソシエーションで複数の上位層を多重化/逆多重化できます. WebRTCのコンテキストでは、PPIDは、UTF-8でエンコードされたユーザーデータ、バイナリでエンコードされたユーザーデータ、およびで定義されているデータチャネル確立プロトコルを区別するために使用されます. 

[ID.ietf-rtcweb-data-protocol]. PPIDにはJavaScript APIからアクセスできないことに注意してください. 

SCTP over DTLSのカプセル化は、上記のSCTP機能とともに、セクション4に記載されているすべての要件を満たします. 

WebRTCのプロトコルの階層化を次の図2に示します. 

                                 + ------ + ------ + ------ +
                                 | DCEP | UTF-8 |バイナリ|
                                 | | データ| データ|
                                 + ------ + ------ + ------ +
                                 | SCTP |
                   + ---------------------------------- +
                   | スタン| SRTP | DTLS |
                   + ---------------------------------- +
                   | ICE |
                   + ---------------------------------- +
                   | UDP1 | UDP2 | UDP3 | ... |
                   + ---------------------------------- +
        
図2：WebRTCプロトコルレイヤー

このスタック（特にDTLS over SCTP [RFC6083]とSCTP over UDP [RFC6951]の組み合わせとは対照的に）が選択された理由は、

o任意の大きなユーザーメッセージの送信をサポートします. 

o PeerConnectionのSRTPメディアチャネルとDTLS接続を共有します. 

o SCTP制御情報のプライバシーを提供します. 

図2のプロトコルスタックを考慮すると、UDPを介したDTLS 1.0の使用法は[RFC4347]で指定され、UDPを介したDTLS 1.2の使用法は[RFC6347]で指定され、DTLS上のSCTPの使用法は[ID.  ietf-tsvwg-sctp-dtls-encaps]. [RFC5764]のセクション5.1.2で説明されているように、STUNとSRTPとDTLSの逆多重化が行われ、SCTPがDTLSの唯一のペイロードであることに注意してください. 

DTLSは通常ユーザーアプリケーション空間に実装されるため、SCTPスタックもユーザーアプリケーション空間スタックである必要があります. 

ICE / UDPレイヤーは、DTLSレイヤーおよびSCTPレイヤーとの対話を必要とせずに、セッション中にIPアドレスの変更を処理できます. ただし、アドレスの変更が発生した場合は、SCTPに通知する必要があります（SHOULD）. この場合、SCTPはパスMTUを再テストして、輻輳状態を初期状態にリセットする必要があります（SHOULD）. [RFC4960]で指定されているようなウィンドウベースの輻輳制御の場合、これは輻輳ウィンドウとスロースタートしきい値を初期値に設定することを意味します. 

対応する関連付けを識別する方法がないため、受信ICMPまたはICMPv6メッセージはSCTPレイヤーで処理できません. したがって、SCTPは、[RFC4820]で指定されたプローブメッセージを使用して、[RFC4821]で指定されたICMPまたはICMPv6に依存することなく、パスMTUディスカバリの実行をサポートする必要があります. IP層の初期パスMTUは、IPv4の場合は1200バイト、IPv6の場合は1280バイトを超えてはなりません（SHOULD NOT）. 

一般に、SCTP実装の下位層インターフェイスは、IPv4とIPv6（接続なし）またはDTLS（接続指向）の違いに対処するように適合させる必要があります. 

図2のプロトコルスタックが使用される場合、DTLSは完全なSCTPパケットを保護するため、完全なSCTPパケットの機密性、完全性、およびソース認証を提供します. 

SCTPは、関連付けごとに輻輳制御を提供します. これは、単一のSCTPアソシエーション内のすべてのSCTPストリームが同じ輻輳ウィンドウを共有することを意味します. SCTP経由で送信されていないトラフィックは、SCTP輻輳制御の対象外です. 標準とは異なる輻輳制御を使用すると、並列SRTPメディアストリームへの影響が改善される可能性があります. 

SCTPは、TCPおよびUDPと同じポート番号の概念を使用します. したがって、SCTPアソシエーションは、各SCTPエンドポイントに1つずつ、2つのポート番号を使用します. 

6.データチャネルでのSCTPの使用
6.1. SCTPプロトコルに関する考慮事項
[ID.ietf-tsvwg-sctp-dtls-encaps]で説明されているSCTPパケットのDTLSカプセル化を使用する必要があります. 

このSCTPスタックとその上位層は、複数のSCTPストリームの使用をサポートする必要があります. ユーザーメッセージは、順序付きまたは順序なしで、部分的または完全な信頼性で送信できます. 

次のSCTPプロトコル拡張が必要です. 

o [RFC6525]で定義されたストリーム再構成拡張がサポートされなければならない（MUST）. チャネルを閉じるために使用されます. 

o [RFC5061]で定義された動的アドレス再構成拡張は、[RFC6525]で定義されたストリームリセット拡張のサポートを通知するために使用されなければなりません（MUST）. [RFC5061]のその他の機能はオプションです. 

o [RFC3758]で定義されている部分的な信頼性拡張はサポートされなければなりません（MUST）. [RFC3758]で定義された時限信頼性PR-SCTPポリシーに加えて、[ID.ietf-tsvwg-sctp-prpolicies]で定義された制限付き再送信ポリシーをサポートする必要があります. 再送信の数をゼロに制限して無秩序な配信と組み合わせると、UDPのようなサービスが提供され、各ユーザーメッセージが1回だけ送信され、受信した順序で配信されます. 

[ID.ietf-tsvwg-sctp-ndata]で定義されているメッセージインターリービングのサポートを使用する必要があります（SHOULD）. 

6.2. SCTPアソシエーション管理
WebRTCコンテキストでは、JSTP（通常はSDPの交換）[ID.ietf-rtcweb-jsep]によってネゴシエートされたように、WebRTC PeerConnectionの2つのエンドポイントがそれを開くことに同意すると、SCTPアソシエーションが設定されます. ICE経由で選択されたDTLS接続を使用します. 通常、これはBUNDLEまたは同等のものを介して、SRTPメディアストリームをキーイングするために使用されるDTLS接続と共有されます. 

SCTPアソシエーションのセットアップ中にネゴシエートされるストリームの数は65535である必要があります（SHOULD）. これは、アソシエーションのセットアップ中にネゴシエートできるストリームの最大数です. 

SCTPは、SCTPアソシエーションを終了する2つの方法をサポートしています. アソシエーションのシャットダウン中にメッセージが失われないようにする手順を使用した、優雅なもの. 2番目の方法は、一方がアソシエーションを打ち切ることができる、非優雅な方法です. 

各SCTPエンドポイントは、ユーザーメッセージとテストメッセージの再送信回数を監視することにより、ピアの到達可能性を継続的に監視します. 過度の再送信の場合、アソシエーションは正常でない方法で終了します. 

SCTPアソシエーションが適切な方法で閉じられると、そのすべてのデータチャネルが閉じられます. グレースフルティアダウンの場合、すべてのデータチャネルも閉じられますが、可能であればエラーを表示する必要があります（SHOULD）. 

6.3. SCTPストリーム
SCTPは、ストリームを別のSCTPエンドポイントへのSCTPアソシエーション内に存在する単方向論理チャネルとして定義します. ストリームは、順次配信の概念を提供し、多重化するために使用されます. 各ユーザーメッセージは、特定のストリームで送信されます. 順序は、同じストリームで送信された順序付けされたメッセージに対してのみ保持されます. 

6.4. データチャネルの定義
データチャネルは、付随するアプリケーションレベルのAPIがWebSocketのAPIを厳密に反映できるように定義されます. これは、双方向データストリームと、データチャネルの意味を識別するために使用される「ラベル」と呼ばれるテキストフィールドを意味します. 

データチャネルの実現は、同じSCTPストリーム識別子を持つ1つの着信ストリームと1つの発信SCTPストリームのペアです. これらのSCTPストリーム識別子の選択方法は、プロトコルと実装によって異なります. これにより、双方向通信が可能になります. 

さらに、各データチャネルには、各方向に次のプロパティがあります. 

o信頼できるまたは信頼できないメッセージ送信. 信頼性の低い送信の場合、同じレベルの信頼性が使用されます. SCTPでは、これはSCTPユーザーメッセージのプロパティであり、SCTPストリームのプロパティではないことに注意してください. 

o送信されたメッセージの順序どおりまたは順序外のメッセージ配信. SCTPでは、これはSCTPユーザーメッセージのプロパティであり、SCTPストリームのプロパティではないことに注意してください. 

o優先度. 2バイトの符号なし整数です. これらの優先順位は、[ID.ietf-tsvwg-sctp-ndata]のインターリーブをサポートする対応するストリームスケジューラの定義に従って、重み付けされたフェアキューのスケジューリング優先順位として解釈されなければなりません（MUST）. WebRTCで使用する場合、使用する値は、128（「標準以下」）、256（「標準」）、512（「高」）、または1024（「超高」）のいずれかである必要があります. 

oオプションのラベル. 

oオプションのプロトコル. 

[ID.ietf-rtcweb-data-protocol]で指定されたプロトコルでネゴシエートされるデータチャネルの場合、上記のプロパティはすべて両方向で同じであることに注意してください. 

6.5. データチャネルを開く
SCTPアソシエーション内のネゴシエーションを使用して、データチャネルを開くことができます. これは、インバンドネゴシエーションまたはアウトオブバンドネゴシエーションと呼ばれます. アウトオブバンドネゴシエーションは、チャネルのパラメータとその作成に関する合意をもたらす方法として定義されます. 詳細はこのドキュメントの範囲外です. データチャネルを使用するアプリケーションは、両方のエンドポイントで一貫してネゴシエーションメソッドを使用する必要があります. 

インバンドネゴシエーションの単純なプロトコルは、[ID.ietf-rtcweb-data-protocol]で指定されています. 

一方がアウトオブバンドネゴシエーションを使用してチャネルを開きたい場合、ストリームを選択します. 特に定義または交渉されていない限り、ストリームはDTLSロールに基づいて選択されます（クライアントは偶数のストリーム識別子、サーバーの奇数のストリーム識別子を選択します）. ただし、アプリケーションは、既存のストリームとの衝突を回避する必要があります. 既存のデータチャネルの一部であるストリームを再利用しようとする場合、追加は失敗する必要があります. ストリームを選択するだけでなく、アプリケーションはメッセージの送信に使用するオプションも決定する必要があります（SHOULD）. アプリケーションは、アプリケーション固有の方法で、ピアのアプリケーションが、使用する選択されたストリームと、そのサイドからデータを送信するためのオプションも知っていることを確認する必要があります. 

6.6. データチャネルでのユーザーデータの転送
オプションが変更されるか、メッセージごとのオプションがより高いレベルで指定されない限り、データチャネルで双方向に送信されるすべてのデータは、データチャネルが開かれたときに定義された信頼性を使用して、基になるストリームを介して送信される必要があります. 

SCTPのメッセージ方向は、ユーザーメッセージのメッセージ境界を保持するために使用されます. したがって、送信者は複数のアプリケーションメッセージをSCTPユーザーメッセージに含めてはなりません（MUST NOT）. 非推奨のPPIDベースのフラグメンテーションと再構成を使用しない限り、送信者は各SCTPユーザーメッセージに1つのアプリケーションメッセージを含める必要があります. 

SCTPペイロードプロトコル識別子（PPID）は、「ペイロードデータ」の解釈を通知するために使用されます. 次のPPIDを使用する必要があります（セクション8を参照）：

WebRTC文字列：UTF-8でエンコードされた空でないJavaScript文字列を識別します. 

WebRTC文字列空：UTF-8でエンコードされた空のJavaScript文字列を識別します. 

WebRTC Binary：空でないJavaScriptバイナリデータ（ArrayBuffer、ArrayBufferViewまたはBlob）を識別します. 

WebRTC Binary Empty：空のJavaScriptバイナリデータ（ArrayBuffer、ArrayBufferViewまたはBlob）を識別します. 

SCTPは、空のユーザーメッセージの送信をサポートしていません. したがって、空のメッセージを送信する必要がある場合は、適切なPPID（WebRTC String EmptyまたはWebRTC Binary Empty）が使用され、1つのゼロバイトのSCTPユーザーメッセージが送信されます. これらのPPIDの1つを含むSCTPユーザーメッセージを受信する場合、受信者はSCTPユーザーメッセージを無視して、空のメッセージとして処理する必要があります. 

PPID「WebRTC String Partial」および「WebRTC Binary Partial」の使用は非推奨です. それらは、PPIDベースの断片化と、信頼性のある順序付けられたデータチャネルに属するユーザーメッセージの再構成に使用されました. 

サポートされていないPPIDを持つメッセージを受信した場合、または受信したメッセージに関連するエラー条件（たとえば、不正な順序付け）が受信者によって検出された場合、受信者は対応するデータチャネルを閉じる必要があります（SHOULD）. これは特に、追加のPPIDを使用する拡張機能は事前の交渉なしでは使用できないことを意味します. 

[RFC4960]で指定されているSCTP基本プロトコルは、ユーザーメッセージのインターリーブをサポートしていません. したがって、大きなユーザーメッセージを送信すると、SCTPアソシエーションを独占する可能性があります. この制限を克服するために、[ID.ietf-tsvwg-sctp-ndata]は、メッセージインターリービングをサポートする拡張機能を定義しています. メッセージのインターリーブがサポートされていない限り、送信者は独占を避けるために最大メッセージサイズを16 KBに制限する必要があります（SHOULD）. 

アプリケーションは任意の大きさの単一メッセージをサポートできないため、メッセージサイズを特定のサイズの範囲内に保つことをお勧めします. この制限は、たとえば[ID.ietf-mmusic-sctp-sdp]を使用して交渉する必要があります. 

送信者は、待ち時間を最小限に抑えるためにNagleアルゴリズム（[RFC1122]を参照）を無効にする必要があります（SHOULD）. 

6.7. データチャネルを閉じる
データチャネルのクローズは、対応する発信ストリームをリセットすることによって通知する必要があります[RFC6525]. これは、一方の側がデータチャネルを閉じることを決定した場合、対応する発信ストリームをリセットすることを意味します. ピアは、着信ストリームがリセットされたことを確認すると、対応する発信ストリームもリセットします. これが完了すると、データチャネルが閉じます. ストリームをリセットすると、ストリームのストリームシーケンス番号（SSN）が「ゼロ」に戻り、リセットが実行されたことがアプリケーション層に通知されます. ストリームは、リセットの実行後に再利用できます. 

[RFC6525]はまた、ストリームがリセットされる前に、すべてのメッセージが配信（または破棄）されることを保証します. 

7.セキュリティに関する考慮事項
このドキュメントは、[ID.ietf-rtcweb-security]と[ID.ietf-rtcweb-security-arch]で与えられたものに追加の考慮事項を追加しません. 

送信者が任意の大きなメッセージを送信しようとする受信者を準備する必要があることに注意してください. 

8. IANAに関する考慮事項
[RFC-Editorへの注意：

「RFCXXXX」は、このドキュメントに割り当てたRFC番号に置き換えられます. 

]

このドキュメントでは、「DOMString Last」、「Binary Data Partial」、「Binary Data Last」、「DOMString Partial」、「WebRTC String Empty」、および「WebRTC Binary Empty」の6つの登録済みSCTPペイロードプロトコル識別子（PPID）を使用します. [RFC4960]は、これらの識別子が割り当てられたレジストリ「SCTP Payload Protocol Identifiers」を作成します. IANAは、このドキュメントを指すようにこれらの6つの割り当ての参照を更新し、最初の4つのPPIDの名前を変更するように要求されます. 対応する日付を保持する必要があります. 

したがって、これらの6つの割り当ては、次のように更新してください. 

   + ------------------------------- + ---------- + ------ ----- + ------------ +
   | 値| SCTP | リファレンス| 日付|
   | | PPID | | |
   + ------------------------------- + ---------- + ------ ----- + ------------ +
   | WebRTC文字列| 51 | [RFCXXXX] | 2013年9月20日|
   | WebRTCバイナリパーシャル| 52 | [RFCXXXX] | 2013年9月20日|
   | （非推奨）| | | |
   | WebRTCバイナリ| 53 | [RFCXXXX] | 2013年9月20日|
   | WebRTC文字列の一部| 54 | [RFCXXXX] | 2013年9月20日|
   | （非推奨）| | | |
   | WebRTC文字列が空| 56 | [RFCXXXX] | 2014-08-22 |
   | WebRTCバイナリが空| 57 | [RFCXXXX] | 2014-08-22 |
   + ------------------------------- + ---------- + ------ ----- + ------------ +
        
9.謝辞
Harald Alvestrand、Richard Barnes、Adam Bergkvist、Alissa Cooper、Benoit Claise、Spencer Dawkins、Gunnar Hellstrom、Christer Holmberg、Cullen Jennings、Paul Kyzivat、Eric Rescorla、Adam Roach、Irene Ruengeler、Randallからのコメント、アイデア、テキストに感謝スチュワート、マーティン・スティーマーリング、ジャスティン・ウベルティ、マグナス・ウェスタールンド. 

10.リファレンス
10.1 規範的な参考文献
[RFC2119] Bradner、S. 、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月. 

[RFC3758]スチュワート、R. 、ラマーリョ、M. 、シェ、Q. 、テューセン、M. 、およびP.コンラッド、「Stream Control Transmission Protocol（SCTP）Partial Reliability Extension」、RFC 3758、2004年5月. 

[RFC4347] Rescorla、E. およびN. Modadugu、「Datagram Transport Layer Security」、RFC 4347、2006年4月. 

[RFC4820] Tuexen、M.、Stewart、R. 、およびP. Lei、「Stream Control Transmission Protocol（SCTP）のパディングチャンクとパラメータ」、RFC 4820、2007年3月. 

[RFC4821] Mathis、M. およびJ. Heffner、「Packetization Layer Path MTU Discovery」、RFC 4821、2007年3月. 

[RFC4960] Stewart、R. 、「Stream Control Transmission Protocol」、RFC 4960、2007年9月. 

[RFC5061] Stewart、R.、Xie、Q.、Tuexen、M.、Maruyama、S. 、およびM. Kozuka、「Stream Control Transmission Protocol（SCTP）Dynamic Address Reconfiguration」、RFC 5061、2007年9月. 

[RFC5245] Rosenberg、J. 、「Interactive Connectivity Establishment（ICE）：A Protocol for Network Address Translator（NAT）Traversal for Offer / Answer Protocols」、RFC 5245、2010年4月. 

[RFC6347] Rescorla、E. およびN. Modadugu、「Datagram Transport Layer Security Version 1.2」、RFC 6347、2012年1月. 

[RFC6525] Stewart、R.、Tuexen、M. 、およびP. Lei、「Stream Control Transmission Protocol（SCTP）Stream Reconfiguration」、RFC 6525、2012年2月. 

[ID.ietf-tsvwg-sctp-ndata] Stewart、R.、Tuexen、M.、Loreto、S. 、およびR. Seggelmann、「Stream Scheduler and the New Data Chunk for the Stream Control Transmission Protocol」、draft-ietf -tsvwg-sctp-ndata-01（作業中）、2014年7月. 

[ID.ietf-rtcweb-data-protocol] Jesup、R.、Loreto、S. 、およびM. Tuexen、「WebRTCデータチャネル確立プロトコル」、draft-ietf-rtcweb-data-protocol-08（作業中） 、2014年9月. 

[ID.ietf-tsvwg-sctp-dtls-encaps] Tuexen、M.、Stewart、R.、Jesup、R. 、およびS. Loreto、「SCTPパケットのDTLSカプセル化」、draft-ietf-tsvwg-sctp-dtls -encaps-07（作業中）、2014年12月. 

[ID.ietf-rtcweb-security] Rescorla、E. 、「WebRTCのセキュリティに関する考慮事項」、draft-ietf-rtcweb-security-07（作業中）、2014年7月. 

[ID.ietf-rtcweb-security-arch] Rescorla、E. 、「WebRTC Security Architecture」、draft-ietf-rtcweb-security-arch-10（作業中）、2014年7月. 

[ID.ietf-rtcweb-jsep] Uberti、J.、Jennings、C. 、およびE. Rescorla、「Javascript Session Establishment Protocol」、draft-ietf-rtcweb-jsep-08（作業中）、2014年10月. 

[ID.ietf-tsvwg-sctp-prpolicies] Tuexen、M.、Seggelmann、R.、Stewart、R. 、およびS. Loreto、「Stream Control Transmission Protocolの部分的な信頼性拡張のための追加ポリシー」、draft-ietf -tsvwg-sctp-prpolicies-06（作業中）、2014年12月. 

[ID.ietf-mmusic-sctp-sdp] Holmberg、C.、Loreto、S. 、およびG. Camarillo、「Stream Control Transmission Protocol（SCTP）-Based Media Transport in the Session Description Protocol（SDP）」、draft- ietf-mmusic-sctp-sdp-11（作業中）、2014年12月. 

10.2 参考情報
[RFC1122] Braden、R. 、「インターネットホストの要件-通信層」、STD 3、RFC 1122、1989年10月. 

[RFC5764] McGrew、D. およびE. Rescorla、「Secure Real-time Transport Protocol（SRTP）のキーを確立するためのデータグラムトランスポート層セキュリティ（DTLS）拡張」、RFC 5764、2010年5月. 

[RFC6083] Tuexen、M.、Seggelmann、R. 、およびE. Rescorla、「Stream Control Transmission Protocol（SCTP）のデータグラムトランスポート層セキュリティ（DTLS）」、RFC 6083、2011年1月. 

[RFC6951] Tuexen、M. 、およびR. Stewart、「UDP Encapsulation of Stream Control Transmission Protocol（SCTP）Packets for End-Host to End-Host Communication」、RFC 6951、2013年5月. 

著者のアドレス

Randell Jesup Mozilla US

   メール：randell-ietf@jesup.org
        
Salvatore Loreto Ericsson Hirsalantie 11 Jorvas 02420 FI

   メール：salvatore.loreto@ericsson.com
        
マイケルトゥセンミュンスター応用科学大学Stegerwaldstrasse 39シュタインフルト48565 DE

   メール：tuexen@fh-muenster.de
        